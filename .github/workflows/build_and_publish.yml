name: Build, publish and deploy docker

on:
  workflow_dispatch:
  push:
    branches: [ 'main' ]
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    name: Build and push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=test,enable=true

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            APP_VERSION=${{ github.ref_name }}

  deploy-testing:
    name: Deploy Testing
    needs: build-and-push-image
    runs-on: [self-hosted, Linux]
    environment:
      name: Testing
      url: https://airflow.test.profcomff.com
    env:
      CONTAINER_NAME: com_profcomff_dwh_airflow_test
    permissions:
      packages: read

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull new version
        run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test

      - name: Run new version
        id: run_test
        run: |
          docker stop ${{ env.CONTAINER_NAME }} || true && docker rm ${{ env.CONTAINER_NAME }} || true
          docker run \
            --detach \
            --restart on-failure:3 \
            --network=web \
            --env AIRFLOW__DATABASE__SQL_ALCHEMY_CONN="${{ secrets.SQL_ALCHEMY_CONN }}" \
            --env AIRFLOW__CORE__FERNET_KEY="${{ secrets.FERNET_KEY }}" \
            --env AIRFLOW__API__ACCESS_CONTROL_ALLOW_HEADERS="content-type, origin, authorization, accept" \
            --env AIRFLOW__API__ACCESS_CONTROL_ALLOW_METHODS="GET, POST, PATCH, OPTIONS, DELETE" \
            --env AIRFLOW__API__ACCESS_CONTROL_ALLOW_ORIGINS="https://api.test.profcomff.com" \
            --name ${{ env.CONTAINER_NAME }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test

  deploy-production:
    name: Deploy Production
    needs: build-and-push-image
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: [self-hosted, Linux]
    environment:
      name: Production
      url: https://airflow.profcomff.com
    env:
      CONTAINER_NAME: com_profcomff_dwh_airflow
    permissions:
      packages: read

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull new version
        run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Run new version
        id: run_prod
        run: |
          docker stop ${{ env.CONTAINER_NAME }} || true && docker rm ${{ env.CONTAINER_NAME }} || true
          docker run \
            --detach \
            --restart always \
            --network=web \
            --env AIRFLOW__DATABASE__SQL_ALCHEMY_CONN="${{ secrets.SQL_ALCHEMY_CONN }}" \
            --env AIRFLOW__CORE__FERNET_KEY="${{ secrets.FERNET_KEY }}" \
            --env AIRFLOW__API__ACCESS_CONTROL_ALLOW_HEADERS="content-type, origin, authorization, accept" \
            --env AIRFLOW__API__ACCESS_CONTROL_ALLOW_METHODS="GET, POST, PATCH, OPTIONS, DELETE" \
            --env AIRFLOW__API__ACCESS_CONTROL_ALLOW_ORIGINS="https://api.profcomff.com" \
            --name ${{ env.CONTAINER_NAME }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
